# -*- coding: utf-8 -*-
"""20240517ch7

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wFjklRM2SSnw6v8lxBCp9CJzoP57M--f
"""

import matplotlib.pyplot as plt
x=[1,2,3,4]
y=[1,4,9,16]
plt.plot(x,y)
plt.show()

import matplotlib.pyplot as plt
import pandas as pd
df=pd.read_excel('data1.xlsx') #판다스호출로 데이터 불러오기
plt.plot(df['kor'],'--',marker="o",label="korean") #해당 데이터프레임의 kor열 불러오기(y값) +그래프의 선스타일 --, 마커로 해당지점 표시 o
plt.plot(df['math'],marker="*",label="math")
plt.legend() #label 즉 범례가 보이도록 지정
plt.show()

df=pd.DataFrame({'요일':['월','화','수','목','금','토','일'],'공부시간':[2,3,1,5,4,2,1],'성적':[70,75,65,85,80,70,60]})
print(df)
plt.plot(df['요일'],df['공부시간'],'--',marker='o',label="공부시간")  #x에는 요일, y에는 공부시간
plt.plot(df['요일'],df['성적'],marker='*',label="성적")
plt.legend()
plt.show()

df=pd.DataFrame({'요일':['월','화','수','목','금','토','일'],'공부시간':[2,3,1,5,4,2,1],'성적':[70,75,65,85,80,70,60]})
plt.scatter(df['공부시간'],df['성적']) #산점도 그리기     #공부시간,성적이 정비례한다는 것을 볼 수 있음(두 변수 간 상관관계 파악)
plt.show()

#numpy 사용한 데이터로 산점도그리기
import numpy as np
x=np.arange(1,11)
y=np.random.randint(1,30,10) #1에서 30사이의 값 10개
plt.scatter(x,y)
plt.show()

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf



import matplotlib.pyplot as plt
import pandas as pd
plt.rc('font',family="NanumGothic")
df=pd.DataFrame({'도시':['서울','부산','인천','대구'],'인구 수':[9904312,3448737,2890451,2466052]})
plt.bar(df['도시'],df['인구 수'])
plt.title("도시별 인구 수")
plt.xlabel("도시")
plt.ylabel("인구 수")
plt.show()

plt.rc('font',family="NanumGothic")
df=pd.read_excel('data1.xlsx')
plt.plot(df['name'],df['kor'],marker="o",label="국어")
plt.plot(df['name'],df['math'],"--",marker="*",label="수학")
plt.title("성적 그래프")
plt.xlabel("이름")
plt.ylabel("점수")
plt.legend()
plt.show()

"""2.seaborn 시본 import seaborn as sns(시본의 별칭)"""

import seaborn as sns                #꽃잎 길이,너비를 통해 해당 종의 속성파악가능   #import pandas, matplotlib은 생략
iris_data=pd.read_csv('iris.csv')
sns.scatterplot(x="petal_length",y="petal_width",hue="species",data=iris_data) #seaborn 한 번 사용 scatterplot(x='x축 칼럼명',y='y축 칼럼명',hue='데이터구분칼럼명',data=사용할 데이터프레임)
plt.title("Scatter Plot by seaborn")
plt.show()

data=pd.DataFrame({'category':['A','B','A','C','B','A','A','C','B','B'],'value':[10,20,15,25,30,12,18,22,28,35]})
sns.countplot(x='category',hue='category',data=data)     #hue는 색분류, category 기준으로 색분류함
plt.show()

df=pd.read_csv('penguins.csv')
sns.barplot(x='species',y='body_mass_g',hue='sex',data=df)
plt.show()

"""시본에서 제공하는 데이터인 ‘penguins’를 이용해서 그래프 그리기
2. penguins 데이터의 숫자값을 갖는 항목들끼리의 상관관계 그래프를 그려보자.
3. 2번 미션의 결과에서 칼럼들간의 상관관계를 확인하고 관계가 있는 두 칼럼을 선택하여 산점도와 추세선
이 함께 나타나는 그래프를 그려보자
그래프의 특성확인 어떻게 표현할수 있는지


"""